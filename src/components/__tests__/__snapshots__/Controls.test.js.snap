// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Controls renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Controls
    onClue={[Function]}
    onReset={[Function]}
    onSolve={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.button
          className="solve-button"
          onClick={[Function]}
>
          Solve
</styled.button>,
        <styled.button
          className="clue-button"
          onClick={[Function]}
>
          Clue
</styled.button>,
        <styled.button
          className="reset-button"
          onClick={[Function]}
>
          Reset
</styled.button>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": "Solve",
          "className": "solve-button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Solve",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": "Clue",
          "className": "clue-button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Clue",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "children": "Reset",
          "className": "reset-button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Reset",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.button
            className="solve-button"
            onClick={[Function]}
>
            Solve
</styled.button>,
          <styled.button
            className="clue-button"
            onClick={[Function]}
>
            Clue
</styled.button>,
          <styled.button
            className="reset-button"
            onClick={[Function]}
>
            Reset
</styled.button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Solve",
            "className": "solve-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Solve",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Clue",
            "className": "clue-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Clue",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": "Reset",
            "className": "reset-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Reset",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
